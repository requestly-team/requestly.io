name: Prod Deployment

on:
  push:
    branches: [production]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://requestly.io
    env:
      NEXT_PUBLIC_AMPLITUDE_KEY: ${{ secrets.AMPLITUDE_KEY }}
      NEXT_PUBLIC_POSTHOG_KEY: ${{ secrets.POSTHOG_KEY }}
      NEXT_PUBLIC_ENV: ${{ secrets.ENV }}
      NEXT_PUBLIC_GA_KEY: ${{ secrets.GA_KEY }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      NEXT_PUBLIC_HOTJAR_KEY: ${{ secrets.HOTJAR_KEY }}
      NEXT_PUBLIC_SENDINBLUE_KEY: ${{ secrets.SENDINBLUE_KEY }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.15.0

      - name: Installing Dependencies
        run: npm install --only=prod
      - name: Building Components
        run: bash build.sh

      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            ./out

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.15.0
      - uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: |
            ./out

      - name: Install Firebase tools
        run: npm install -g firebase-tools

      - name: Deploy to Firebase
        run: firebase deploy -P requestly-prod --only hosting --token ${{ secrets.FIREBASE_TOKEN }}

  cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build, deploy]

    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: artifacts
          failOnError: false
